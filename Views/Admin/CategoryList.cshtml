@{
    // ViewData["Title"] = "HallBooking";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
<style>
    body {
        background: #f2f4f8;
        font-family: 'Poppins', sans-serif;
        min-height: 100vh;
        padding: 2rem 0;
    }

    .main-container {
        max-width: 1400px;
        margin: 0 auto;
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 2rem;
        padding: 1rem 1rem;
    }

    .entry-section {
        background: white;
        border-radius: 12px;
        padding: 2rem;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
        height: fit-content;
    }

    .list-section {
        background: white;
        border-radius: 12px;
        padding: 2rem;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
    }

    .section-title {
        text-align: center;
        color: #2980b9;
        font-weight: 600;
        font-size: 1.5rem;
        margin-bottom: 1.5rem;
        padding-bottom: 1rem;
        border-bottom: 3px solid #3498db;
    }

    .form-label {
        font-weight: 500;
        color: #2c3e50;
        margin-bottom: 0.5rem;
    }

    .form-control, .form-select {
        border: 2px solid #e9ecef;
        border-radius: 8px;
        padding: 0.8rem;
        font-size: 0.95rem;
        transition: all 0.3s ease;
        margin-bottom: 1rem;
    }

        .form-control:focus, .form-select:focus {
            border-color: #3498db;
            box-shadow: 0 0 0 0.2rem rgba(52, 152, 219, 0.15);
        }

    .btn-primary {
        background: linear-gradient(135deg, #3498db, #2980b9);
        border: none;
        padding: 0.8rem 2rem;
        border-radius: 8px;
        font-weight: 500;
        width: 100%;
        transition: all 0.3s ease;
    }

        .btn-primary:hover {
            background: linear-gradient(135deg, #2980b9, #3498db);
            transform: translateY(-2px);
        }

    .controls-section {
        display: flex;
        justify-content: between;
        align-items: center;
        margin-bottom: 1.5rem;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .show-entries {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .search-box {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-left: auto;
    }

    .search-input {
        border: 2px solid #e9ecef;
        border-radius: 6px;
        padding: 0.5rem;
        width: 200px;
    }

    .notifications-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 1rem;
    }

        .notifications-table th {
            background: #34495e;
            color: white;
            padding: 1rem 0.5rem;
            text-align: center;
            font-weight: 500;
            font-size: 0.9rem;
        }

        .notifications-table td {
            padding: 0.8rem 0.5rem;
            text-align: center;
            border-bottom: 1px solid #e9ecef;
            font-size: 0.85rem;
            vertical-align: middle;
        }

        .notifications-table tbody tr:hover {
            background: #f8f9fa;
        }

        .notifications-table tbody tr:nth-child(even) {
            background: #f9f9f9;
        }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
        justify-content: center;
    }

    .btn-edit {
        background: #f39c12;
        color: white;
        border: none;
        padding: 0.3rem 0.6rem;
        border-radius: 4px;
        font-size: 0.8rem;
        cursor: pointer;
        transition: background 0.3s;
    }

        .btn-edit:hover {
            background: #e67e22;
        }

    .btn-delete {
        background: #e74c3c;
        color: white;
        border: none;
        padding: 0.3rem 0.6rem;
        border-radius: 4px;
        font-size: 0.8rem;
        cursor: pointer;
        transition: background 0.3s;
    }

        .btn-delete:hover {
            background: #c0392b;
        }

    .file-upload-section {
        margin-bottom: 1rem;
    }

    .file-input-wrapper {
        position: relative;
        display: inline-block;
        width: 100%;
    }

    .file-input {
        width: 100%;
        padding: 0.8rem;
        border: 2px dashed #3498db;
        border-radius: 8px;
        background: #f8f9fa;
        cursor: pointer;
        text-align: center;
        transition: all 0.3s ease;
    }

        .file-input:hover {
            background: #e9ecef;
            border-color: #2980b9;
        }

    .success-message {
        background: #27ae60;
        color: white;
        padding: 1rem;
        border-radius: 8px;
        margin-bottom: 1rem;
        display: none;
    }

    .edit-mode {
        background: #fff3cd !important;
        border: 2px solid #ffc107 !important;
    }

    .notifications-table th,
    .notifications-table td {
        padding: 0.5rem 0.25rem;
    }

    }
</style>

<div class="main-container">
    <!-- Left Side - Entry Section -->
    <div class="entry-section">
        <h2 class="section-title">*** Category Entry ***</h2>

        <div class="success-message" id="successMessage">
            <i class="fas fa-check-circle me-2"></i>Category saved successfully!
        </div>

        <form id="notificationForm">
            @* <input type="hidden" id="editingId" value=""> *@

            @* <div class="mb-3">
                <label for="notificationStatus" class="form-label">Status</label>
                <select id="notificationStatus" class="form-select" required>
                    <option value="">Select Status</option>
                    <option value="New">New</option>
                    <option value="Active">Active</option>
                </select>
            </div> *@
            <form id="addCategoryForm">
                <div class="mb-3">
                    <label for="categoryName" class="form-label">Category Name</label>
                    <input type="text" id="categoryName" class="form-control" placeholder="Enter Category Name" required>
                </div>

                @*<div class="mb-3">
                <label for="notificationDetails" class="form-label">Notification Details</label>
                <textarea id="notificationDetails" class="form-control" rows="4" placeholder="Enter notification details" required></textarea>
            </div>

            <div class="file-upload-section">
                <label class="form-label">Upload Document</label>
                <div class="file-input-wrapper">
                    <input type="file" id="fileUpload" class="d-none" accept=".pdf,.doc,.docx,.jpg,.png">
                    <div class="file-input" onclick="document.getElementById('fileUpload').click()">
                        <i class="fas fa-cloud-upload-alt me-2"></i>
                        <span id="fileText">Browse... No file selected.</span>
                    </div>
                </div>
            </div> *@

                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save me-2"></i><span id="submitText">Submit</span>
                </button>
            </form>

            @*   <button type="button" class="btn btn-secondary mt-2" id="cancelEdit" style="display: none; width: 100%;" onclick="cancelEdit()">
                <i class="fas fa-times me-2"></i>Cancel Edit
            </button> *@
        </form>
    </div>

    <!-- Right Side - List Section -->
    <div class="list-section">
        <h2 class="section-title">*** All Categories ***</h2>

        <div class="controls-section">
            <div class="show-entries">
                <span>Show</span>
                <select id="entriesPerPage" class="form-select" style="width: auto;" onchange="updateDisplay()">
                    <option value="5">5</option>
                    <option value="10" selected>10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                </select>
                <span>entries</span>
            </div>

            <div class="search-box">
                <span>Search:</span>
                <input type="text" id="searchInput" class="search-input" placeholder="Search notifications..." onkeyup="searchNotifications()">
            </div>
        </div>

        <div class="table-responsive">
            <table class="notifications-table">
                <thead>
                    <tr>
                        <th>NO.</th>
                        <th>Category Name</th>
                        <th>Edit</th>
                    </tr>
                </thead>
                <tbody id="notificationsTableBody">
                    <tr>
                        <td colspan="3" class="text-center text-muted">No Category found.</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div class="pagination-info mt-3" id="paginationInfo"></div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
<script>
    let notifications = [];
    let filteredNotifications = [];
    let currentPage = 1;
    let entriesPerPage = 10;
    let editingMode = false;

    // File upload handling
    document.getElementById('fileUpload').addEventListener('change', function(e) {
        const fileText = document.getElementById('fileText');
        if (e.target.files.length > 0) {
            fileText.textContent = e.target.files[0].name;
        } else {
            fileText.textContent = 'Browse... No file selected.';
        }
    });

    // Form submission
    document.getElementById('notificationForm').addEventListener('submit', function(e) {
        e.preventDefault();

        const formData = {
            id: editingMode ? parseInt(document.getElementById('editingId').value) : Date.now(),
            date: new Date().toLocaleDateString('en-GB'),
            name: document.getElementById('notificationName').value,
            type: document.getElementById('notificationType').value,
            details: document.getElementById('notificationDetails').value,
            status: document.getElementById('notificationStatus').value
        };

        if (editingMode) {
            // Update existing notification
            const index = notifications.findIndex(n => n.id === formData.id);
            if (index !== -1) {
                notifications[index] = formData;
            }
            editingMode = false;
            document.getElementById('submitText').textContent = 'Submit';
            document.getElementById('cancelEdit').style.display = 'none';
        } else {
            // Add new notification
            notifications.unshift(formData);
        }

        showSuccessMessage();
        resetForm();
        updateDisplay();
    });

    function showSuccessMessage() {
        const successMessage = document.getElementById('successMessage');
        successMessage.style.display = 'block';
        setTimeout(() => {
            successMessage.style.display = 'none';
        }, 3000);
    }

    function resetForm() {
        document.getElementById('notificationForm').reset();
        document.getElementById('fileText').textContent = 'Browse... No file selected.';
        document.getElementById('editingId').value = '';
        editingMode = false;
        document.getElementById('submitText').textContent = 'Submit';
        document.getElementById('cancelEdit').style.display = 'none';
    }

    function updateDisplay() {
        entriesPerPage = parseInt(document.getElementById('entriesPerPage').value);
        searchNotifications();
    }

    function searchNotifications() {
        const searchTerm = document.getElementById('searchInput').value.toLowerCase();

        if (searchTerm === '') {
            filteredNotifications = [...notifications];
        } else {
            filteredNotifications = notifications.filter(notification =>
                notification.name.toLowerCase().includes(searchTerm) ||
                notification.type.toLowerCase().includes(searchTerm) ||
                notification.details.toLowerCase().includes(searchTerm) ||
                notification.date.includes(searchTerm)
            );
        }

        displayNotifications();
    }

    function displayNotifications() {
        const tbody = document.getElementById('notificationsTableBody');
        const startIndex = (currentPage - 1) * entriesPerPage;
        const endIndex = startIndex + entriesPerPage;
        const pageNotifications = filteredNotifications.slice(startIndex, endIndex);

        if (pageNotifications.length === 0) {
            tbody.innerHTML = '<tr><td colspan="6" class="text-center text-muted">No notifications found.</td></tr>';
            document.getElementById('paginationInfo').textContent = '';
            return;
        }

        let html = '';
        pageNotifications.forEach((notification, index) => {
            html += `
                <tr>
                    <td>${startIndex + index + 1}</td>
                    <td>${notification.date}</td>
                    <td>${notification.name}</td>
                    <td>${notification.type}</td>
                    <td>${notification.details}</td>
                    <td>
                        <div class="action-buttons">
                            <button class="btn-edit" onclick="editNotification(${notification.id})">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn-delete" onclick="deleteNotification(${notification.id})">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            `;
        });

        tbody.innerHTML = html;

        // Update pagination info
        const totalEntries = filteredNotifications.length;
        const startEntry = startIndex + 1;
        const endEntry = Math.min(endIndex, totalEntries);
        document.getElementById('paginationInfo').textContent =
            `Showing ${startEntry} to ${endEntry} of ${totalEntries} entries`;
    }

    function editNotification(id) {
        const notification = notifications.find(n => n.id === id);
        if (!notification) return;

        // Populate form with notification data
        document.getElementById('editingId').value = notification.id;
        document.getElementById('notificationStatus').value = notification.status;
        document.getElementById('notificationName').value = notification.name;
        document.getElementById('notificationType').value = notification.type;
        document.getElementById('notificationDetails').value = notification.details;

        // Switch to edit mode
        editingMode = true;
        document.getElementById('submitText').textContent = 'Update';
        document.getElementById('cancelEdit').style.display = 'block';

        // Scroll to form
        document.querySelector('.entry-section').scrollIntoView({ behavior: 'smooth' });
    }

    function cancelEdit() {
        resetForm();
    }

    function deleteNotification(id) {
        if (confirm('Are you sure you want to delete this notification?')) {
            notifications = notifications.filter(n => n.id !== id);
            updateDisplay();

            // Show success message
            const successMessage = document.getElementById('successMessage');
            successMessage.innerHTML = '<i class="fas fa-check-circle me-2"></i>Notification deleted successfully!';
            successMessage.style.background = '#e74c3c';
            successMessage.style.display = 'block';
            setTimeout(() => {
                successMessage.style.display = 'none';
                successMessage.style.background = '#27ae60';
                successMessage.innerHTML = '<i class="fas fa-check-circle me-2"></i>Notification saved successfully!';
            }, 3000);
        }
    }

    // Initialize the page

</script>